<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>My3DViewerClass</class>
 <widget class="QMainWindow" name="My3DViewerClass">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1005</width>
    <height>589</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Mini Maya</string>
  </property>
  <property name="windowIcon">
   <iconset resource="startercode.qrc">
    <normaloff>:/StarterCode/icon.png</normaloff>:/StarterCode/icon.png</iconset>
  </property>
  <property name="layoutDirection">
   <enum>Qt::LeftToRight</enum>
  </property>
  <property name="autoFillBackground">
   <bool>false</bool>
  </property>
  <property name="styleSheet">
   <string notr="true">background-color: qlineargradient(spread:pad, x1:0.5, y1:0.165, x2:0.471909, y2:1, stop:0.329545 rgba(191, 189, 255, 255), stop:1 rgba(229, 229, 229, 255));</string>
  </property>
  <widget class="QWidget" name="centralWidget">
   <widget class="MyGLWidget" name="mainWindowClass" native="true">
    <property name="geometry">
     <rect>
      <x>190</x>
      <y>90</y>
      <width>621</width>
      <height>471</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">font: 75 8pt &quot;Leelawadee&quot;;</string>
    </property>
   </widget>
   <widget class="QPushButton" name="pushButton">
    <property name="geometry">
     <rect>
      <x>30</x>
      <y>10</y>
      <width>51</width>
      <height>51</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton{
background-image: url(:/StarterCode/rotate_unclicked.png);
background-color: rgba(255, 255, 255, 0);
}
QPushButton:pressed{
image:url(:/StarterCode/rotate_clicked.png);
background-color: rgba(255, 255, 255, 0);
}

</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QPushButton" name="pushButton_2">
    <property name="geometry">
     <rect>
      <x>100</x>
      <y>10</y>
      <width>51</width>
      <height>51</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton{background-image: url(:/StarterCode/stop_unclicked.png) 200 px;
background-color: rgba(255, 255, 255, 0);
}
QPushButton:pressed{
background-image:url(:/StarterCode/stop_clicked.png);
background-color: rgba(255, 255, 255, 0);
}

</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="listWrapper" name="faceList">
    <property name="geometry">
     <rect>
      <x>840</x>
      <y>60</y>
      <width>151</width>
      <height>91</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QScrollBar::vertical{
background: white;
border: 1px gray;
}
QScrollBar::handle::vertical{
background: rgb(85, 0, 255);
min-width:20px;
}

QScrollBar::up-arrow::vertical{
border: 2px white;
background: rgb(85, 0, 255);
width: 3px;
height: 3px 
}

QScrollBar::down-arrow::vertical{
background: rgb(85, 0, 255);
width: 3px;
height: 3px;
}

QScrollBar::add-page::vertical, QScrollBar::sub-page::vertical{
background: gray;
}

QListView::item:selected{
    border-radius: 5px;
    border:1px solid #999999;
 
	color: rgb(255,255, 255);
	
	background-color: qlineargradient(spread:pad, x1:0.5, y1:0.165, x2:0.471909, y2:1, stop:0.329545 rgba(191, 189, 255, 255), stop:1 rgba(229, 229, 229, 255));

}

#faceList{
background-color: rgb(0, 0, 0);
color: rgb(255,255, 255);
}

</string>
    </property>
    <property name="autoScroll">
     <bool>true</bool>
    </property>
    <property name="selectionMode">
     <enum>QAbstractItemView::SingleSelection</enum>
    </property>
   </widget>
   <widget class="listWrapper" name="VertexList">
    <property name="geometry">
     <rect>
      <x>840</x>
      <y>420</y>
      <width>151</width>
      <height>141</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QScrollBar::vertical{
background: white;
border: 1px gray;
}
QScrollBar::handle::vertical{
background: rgb(85, 0, 255);
min-width:20px;
}

QScrollBar::up-arrow::vertical{
border: 2px white;
background: rgb(85, 0, 255);
width: 3px;
height: 3px 
}



#VertexList{
	background-color: rgb(0, 0, 0);
color: rgb(255,255, 255);
}</string>
    </property>
   </widget>
   <widget class="QLabel" name="label">
    <property name="geometry">
     <rect>
      <x>840</x>
      <y>40</y>
      <width>46</width>
      <height>13</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">color: rgb(0, 0, 89);
font: 75 10pt &quot;Leelawadee&quot;;
background-color: rgba(255, 255, 255, 0);
font-weight:bold</string>
    </property>
    <property name="text">
     <string>Faces</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_2">
    <property name="geometry">
     <rect>
      <x>840</x>
      <y>400</y>
      <width>61</width>
      <height>16</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">color: rgb(0, 0, 89);
font: 75 10pt &quot;Leelawadee&quot;;
background-color: rgba(255, 255, 255, 0);
font-weight:bold</string>
    </property>
    <property name="text">
     <string>Vertices</string>
    </property>
   </widget>
   <widget class="listWrapper" name="EdgesList">
    <property name="geometry">
     <rect>
      <x>840</x>
      <y>200</y>
      <width>151</width>
      <height>171</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QScrollBar::vertical{
background: white;
border: 1px gray;
}
QScrollBar::handle::vertical{
background: rgb(85, 0, 255);
min-width:20px;
}

QScrollBar::up-arrow::vertical{
border: 2px white;
background: rgb(85, 0, 255);
width: 3px;
height: 3px 
}

QScrollBar::down-arrow::vertical{
background: rgb(85, 0, 255);
width: 3px;
height: 3px;
}

QScrollBar::add-page::vertical, QScrollBar::sub-page::vertical{
background: gray;
}
QListView::item:selected{
    border-radius: 5px;
    border:1px solid #999999;
 
	color: rgb(255,255, 255);
	
	background-color: qlineargradient(spread:pad, x1:0.5, y1:0.165, x2:0.471909, y2:1, stop:0.329545 rgba(191, 189, 255, 255), stop:1 rgba(229, 229, 229, 255));

}



#EdgesList{
	background-color: rgb(0, 0, 0);
color: rgb(255,255, 255);
}

QScrollBar::horizontal{
background: white;
border: 1px gray;
}
QScrollBar::handle::horizontal{
background: rgb(85, 0, 255);
min-width:20px;
}

QScrollBar::left-arrow::horizontal{
border: 2px white;
background: rgb(85, 0, 255);
width: 3px;
height: 3px 
}

QScrollBar::right-arrow::horizontal{
background: rgb(85, 0, 255);
width: 3px;
height: 3px;
}

QScrollBar::add-page::horizontal, QScrollBar::sub-page::horizontal{
background: gray;
}</string>
    </property>
    <property name="selectionMode">
     <enum>QAbstractItemView::ExtendedSelection</enum>
    </property>
   </widget>
   <widget class="QLabel" name="label_9">
    <property name="geometry">
     <rect>
      <x>840</x>
      <y>180</y>
      <width>81</width>
      <height>16</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">color: rgb(0, 0, 89);
font: 75 10pt &quot;Leelawadee&quot;;
background-color: rgba(255, 255, 255, 0);
font-weight:bold</string>
    </property>
    <property name="text">
     <string>Half Edges</string>
    </property>
   </widget>
   <widget class="Line" name="line_2">
    <property name="geometry">
     <rect>
      <x>823</x>
      <y>33</y>
      <width>3</width>
      <height>550</height>
     </rect>
    </property>
    <property name="orientation">
     <enum>Qt::Vertical</enum>
    </property>
   </widget>
   <widget class="QLCDNumber" name="lcdNumber">
    <property name="geometry">
     <rect>
      <x>933</x>
      <y>33</y>
      <width>51</width>
      <height>20</height>
     </rect>
    </property>
    <property name="autoFillBackground">
     <bool>false</bool>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgba(5, 5, 5, 225);
color: rgb(37, 15, 162);
</string>
    </property>
    <property name="numDigits">
     <number>7</number>
    </property>
   </widget>
   <widget class="QLCDNumber" name="lcdNumber_2">
    <property name="geometry">
     <rect>
      <x>930</x>
      <y>170</y>
      <width>51</width>
      <height>20</height>
     </rect>
    </property>
    <property name="autoFillBackground">
     <bool>false</bool>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgba(5, 5, 5, 225);
color: rgb(37, 15, 162);</string>
    </property>
    <property name="numDigits">
     <number>7</number>
    </property>
   </widget>
   <widget class="QLCDNumber" name="lcdNumber_3">
    <property name="geometry">
     <rect>
      <x>930</x>
      <y>390</y>
      <width>51</width>
      <height>20</height>
     </rect>
    </property>
    <property name="autoFillBackground">
     <bool>false</bool>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgba(5, 5, 5, 225);
color: rgb(37, 15, 162);</string>
    </property>
    <property name="numDigits">
     <number>7</number>
    </property>
   </widget>
   <widget class="QTabWidget" name="tabWidget">
    <property name="enabled">
     <bool>true</bool>
    </property>
    <property name="geometry">
     <rect>
      <x>10</x>
      <y>280</y>
      <width>171</width>
      <height>251</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"> QTabWidget::pane { /* The tab widget frame */
         border-top: 2px solid #C2C7CB;
     }

     QTabWidget::tab-bar {
         left: 5px; /* move to the right by 5px */
     }

     /* Style the tab using the tab sub-control. Note that
         it reads QTabBar _not_ QTabWidget */
     QTabBar::tab {
         background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                     stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                     stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
         border: 2px solid #C4C4C3;
         border-bottom-color: #C2C7CB; /* same as the pane color */
         border-top-left-radius: 4px;
         border-top-right-radius: 4px;
         min-width: 8ex;
         padding: 2px;
     }

     QTabBar::tab:selected, QTabBar::tab:hover {
         background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                     stop: 0 #fafafa, stop: 0.4 #f4f4f4,
                                     stop: 0.5 #e7e7e7, stop: 1.0 #fafafa);
     }

     QTabBar::tab:selected {
         border-color: #9B9B9B;
         border-bottom-color: #C2C7CB; /* same as pane color */
     }

     QTabBar::tab:!selected {
         margin-top: 2px; /* make non-selected tabs look smaller */
     }

     /* make use of negative margins for overlapping tabs */
     QTabBar::tab:selected {
         /* expand/overlap to the left and right by 4px */
         margin-left: -4px;
         margin-right: -4px;
     }

     QTabBar::tab:first:selected {
         margin-left: 0; /* the first selected tab has nothing to overlap with on the left */
     }

     QTabBar::tab:last:selected {
         margin-right: 0; /* the last selected tab has nothing to overlap with on the right */
     }

     QTabBar::tab:only-one {
         margin: 0; /* if there is only one tab, we don't want overlapping margins */
     }</string>
    </property>
    <property name="currentIndex">
     <number>1</number>
    </property>
    <widget class="QWidget" name="tab">
     <attribute name="title">
      <string>Bounding Box</string>
     </attribute>
     <attribute name="toolTip">
      <string>Bounding Box</string>
     </attribute>
     <widget class="QLabel" name="label_12">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>121</width>
        <height>16</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">background-color: rgba(255, 255, 255, 0);</string>
      </property>
      <property name="text">
       <string>Dimensions:</string>
      </property>
     </widget>
     <widget class="QSpinBox" name="spinBox">
      <property name="geometry">
       <rect>
        <x>50</x>
        <y>50</y>
        <width>91</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">background-color: rgb(255, 255, 255);
color: rgb(170, 0, 127);</string>
      </property>
      <property name="minimum">
       <number>2</number>
      </property>
      <property name="maximum">
       <number>5</number>
      </property>
     </widget>
     <widget class="QSpinBox" name="spinBox_2">
      <property name="geometry">
       <rect>
        <x>50</x>
        <y>150</y>
        <width>91</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">background-color: rgb(255, 255, 255);
color: rgb(170, 0, 127);</string>
      </property>
      <property name="minimum">
       <number>2</number>
      </property>
      <property name="maximum">
       <number>5</number>
      </property>
     </widget>
     <widget class="QSpinBox" name="spinBox_3">
      <property name="geometry">
       <rect>
        <x>50</x>
        <y>100</y>
        <width>91</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">background-color: rgb(255, 255, 255);
color: rgb(170, 0, 127);</string>
      </property>
      <property name="minimum">
       <number>2</number>
      </property>
      <property name="maximum">
       <number>5</number>
      </property>
     </widget>
     <widget class="QLabel" name="label_13">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>50</y>
        <width>16</width>
        <height>20</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: rgb(0, 0, 89);
font: 75 10pt &quot;Leelawadee&quot;;
background-color: rgba(255, 255, 255, 0);
font-weight:bold</string>
      </property>
      <property name="text">
       <string>X</string>
      </property>
     </widget>
     <widget class="QLabel" name="label_14">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>100</y>
        <width>16</width>
        <height>16</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: rgb(0, 0, 89);
font: 75 10pt &quot;Leelawadee&quot;;
background-color: rgba(255, 255, 255, 0);
font-weight:bold</string>
      </property>
      <property name="text">
       <string>Y</string>
      </property>
     </widget>
     <widget class="QLabel" name="label_15">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>150</y>
        <width>20</width>
        <height>20</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: rgb(0, 0, 89);
font: 75 10pt &quot;Leelawadee&quot;;
background-color: rgba(255, 255, 255, 0);
font-weight:bold</string>
      </property>
      <property name="text">
       <string>Z</string>
      </property>
     </widget>
     <widget class="QPushButton" name="showBox_button">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>190</y>
        <width>61</width>
        <height>23</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: white;
background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #600000, stop: 0.1 #c00000, stop: 0.49 #ff0000, stop: 0.5 #700000, stop: 1 #600000);
border-width: 1px;
border-color: #fff;
border-style: solid;
border-radius: 7;
padding: 3px;
font-size: 10px;
font-weight:bold;
padding-left: 5px;
padding-right: 5px;</string>
      </property>
      <property name="text">
       <string>Show Box</string>
      </property>
     </widget>
     <widget class="QPushButton" name="hideBox_button">
      <property name="geometry">
       <rect>
        <x>90</x>
        <y>190</y>
        <width>61</width>
        <height>23</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: white;
background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #600000, stop: 0.1 #c00000, stop: 0.49 #ff0000, stop: 0.5 #700000, stop: 1 #600000);
border-width: 1px;
border-color: #fff;
border-style: solid;
border-radius: 7;
padding: 3px;
font-size: 10px;
font-weight:bold;
padding-left: 5px;
padding-right: 5px;</string>
      </property>
      <property name="text">
       <string>Hide Box</string>
      </property>
     </widget>
    </widget>
    <widget class="QWidget" name="Deform">
     <attribute name="title">
      <string>Deform</string>
     </attribute>
     <attribute name="toolTip">
      <string>Deform</string>
     </attribute>
     <widget class="QPushButton" name="pushButton_20">
      <property name="geometry">
       <rect>
        <x>40</x>
        <y>80</y>
        <width>75</width>
        <height>23</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: white;
background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #600000, stop: 0.1 #c00000, stop: 0.49 #ff0000, stop: 0.5 #700000, stop: 1 #600000);
border-width: 1px;
border-color: #fff;
border-style: solid;
border-radius: 7;
padding: 3px;
font-size: 10px;
font-weight:bold;
padding-left: 5px;
padding-right: 5px;</string>
      </property>
      <property name="text">
       <string>Twist</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButton_21">
      <property name="geometry">
       <rect>
        <x>40</x>
        <y>140</y>
        <width>75</width>
        <height>23</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: white;
background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #600000, stop: 0.1 #c00000, stop: 0.49 #ff0000, stop: 0.5 #700000, stop: 1 #600000);
border-width: 1px;
border-color: #fff;
border-style: solid;
border-radius: 7;
padding: 3px;
font-size: 10px;
font-weight:bold;
padding-left: 5px;
padding-right: 5px;</string>
      </property>
      <property name="text">
       <string>Taper</string>
      </property>
     </widget>
     <widget class="QSpinBox" name="spinBox_4">
      <property name="geometry">
       <rect>
        <x>80</x>
        <y>30</y>
        <width>42</width>
        <height>22</height>
       </rect>
      </property>
     </widget>
     <widget class="QLabel" name="label_6">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>30</y>
        <width>46</width>
        <height>13</height>
       </rect>
      </property>
      <property name="text">
       <string>Twist</string>
      </property>
     </widget>
    </widget>
   </widget>
   <widget class="QTabWidget" name="tabWidget_2">
    <property name="geometry">
     <rect>
      <x>190</x>
      <y>0</y>
      <width>621</width>
      <height>80</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">
QTabWidget::pane { /* The tab widget frame */
         border-top: 2px solid #C2C7CB;
     }

     QTabWidget::tab-bar {
         left: 5px; /* move to the right by 5px */
     }

     /* Style the tab using the tab sub-control. Note that
         it reads QTabBar _not_ QTabWidget */
     QTabBar::tab {
         background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                     stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                     stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
         border: 2px solid #C4C4C3;
         border-bottom-color: #C2C7CB; /* same as the pane color */
         border-top-left-radius: 4px;
         border-top-right-radius: 4px;
         min-width: 8ex;
         padding: 2px;
     }

     QTabBar::tab:selected, QTabBar::tab:hover {
         background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                     stop: 0 #fafafa, stop: 0.4 #f4f4f4,
                                     stop: 0.5 #e7e7e7, stop: 1.0 #fafafa);
     }

     QTabBar::tab:selected {
         border-color: #9B9B9B;
         border-bottom-color: #C2C7CB; /* same as pane color */
     }

     QTabBar::tab:!selected {
         margin-top: 2px; /* make non-selected tabs look smaller */
     }

     /* make use of negative margins for overlapping tabs */
     QTabBar::tab:selected {
         /* expand/overlap to the left and right by 4px */
         margin-left: -4px;
         margin-right: -4px;
     }

     QTabBar::tab:first:selected {
         margin-left: 0; /* the first selected tab has nothing to overlap with on the left */
     }

     QTabBar::tab:last:selected {
         margin-right: 0; /* the last selected tab has nothing to overlap with on the right */
     }

     QTabBar::tab:only-one {
         margin: 0; /* if there is only one tab, we don't want overlapping margins */
     }

</string>
    </property>
    <property name="currentIndex">
     <number>2</number>
    </property>
    <widget class="QWidget" name="EditMesh">
     <attribute name="title">
      <string>Edit Mesh</string>
     </attribute>
     <widget class="QPushButton" name="pushButton_6">
      <property name="geometry">
       <rect>
        <x>0</x>
        <y>0</y>
        <width>61</width>
        <height>51</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton{
image: url(:/StarterCode/delete_unclicked.png);
background-color: rgba(255, 255, 255, 0);

}
QPushButton:pressed{
image: url(:/StarterCode/delete_clicked.png);
background-color: rgba(255, 255, 255, 0);
}


</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButton_5">
      <property name="geometry">
       <rect>
        <x>100</x>
        <y>0</y>
        <width>61</width>
        <height>51</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton{
image: url(:/StarterCode/split_unclicked.png);
background-color: rgba(255, 255, 255, 0);
}
QPushButton:pressed{
image: url(:/StarterCode/split_clicked.png);
background-color: rgba(255, 255, 255, 0);
}


</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButton_4">
      <property name="geometry">
       <rect>
        <x>200</x>
        <y>0</y>
        <width>61</width>
        <height>51</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton{
image: url(:/StarterCode/edge_unclicked.png);
background-color: rgba(255, 255, 255, 0);

}
QPushButton:pressed{
background-image: url(:/StarterCode/edge_clicked.png);
background-color: rgba(255, 255, 255, 0);
}



</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButton_3">
      <property name="geometry">
       <rect>
        <x>300</x>
        <y>0</y>
        <width>71</width>
        <height>51</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton{
image: url(:/StarterCode/vertex_unclicked.png);
background-color: rgba(255, 255, 255, 0);

}
QPushButton:pressed{
image: url(:/StarterCode/vertex_clicked.png);
background-color: rgba(255, 255, 255, 0);
}



</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButton_9">
      <property name="geometry">
       <rect>
        <x>410</x>
        <y>0</y>
        <width>75</width>
        <height>51</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton{
image: url(:/StarterCode/subdivide_unclicked.png);
background-color: rgba(255, 255, 255, 0);

}
QPushButton:pressed{
background-image: url(:/StarterCode/subdivide_clicked.png);
background-color: rgba(255, 255, 255, 0);
}

</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButton_10">
      <property name="geometry">
       <rect>
        <x>510</x>
        <y>0</y>
        <width>75</width>
        <height>51</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton{
image: url(:/StarterCode/extrude_unclicked.png);
background-color: rgba(255, 255, 255, 0);

}
QPushButton:pressed{
background-image: url(:/StarterCode/extrude_clicked.png);
background-color: rgba(255, 255, 255, 0);
}

</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
    </widget>
    <widget class="QWidget" name="Camera">
     <attribute name="title">
      <string>Camera</string>
     </attribute>
     <widget class="lineTextWrapper" name="lineEdit">
      <property name="geometry">
       <rect>
        <x>170</x>
        <y>30</y>
        <width>113</width>
        <height>20</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">background-color: rgb(0, 0, 0);
color: rgb(255, 255, 255);</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButton_7">
      <property name="geometry">
       <rect>
        <x>290</x>
        <y>30</y>
        <width>75</width>
        <height>23</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: white;
background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #600000, stop: 0.1 #c00000, stop: 0.49 #ff0000, stop: 0.5 #700000, stop: 1 #600000);
border-width: 1px;
border-color: #fff;
border-style: solid;
border-radius: 7;
padding: 3px;
font-size: 10px;
font-weight:bold;
padding-left: 5px;
padding-right: 5px;</string>
      </property>
      <property name="text">
       <string>Save Camera</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButton_8">
      <property name="geometry">
       <rect>
        <x>290</x>
        <y>0</y>
        <width>75</width>
        <height>23</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: white;
background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #600000, stop: 0.1 #c00000, stop: 0.49 #ff0000, stop: 0.5 #700000, stop: 1 #600000);
border-width: 1px;
border-color: #fff;
border-style: solid;
border-radius: 7;
padding: 3px;
font-size: 10px;
font-weight:bold;
padding-left: 5px;
padding-right: 5px;</string>
      </property>
      <property name="text">
       <string>Set Ref Point</string>
      </property>
     </widget>
     <widget class="lineTextWrapper" name="lineEdit_2">
      <property name="geometry">
       <rect>
        <x>170</x>
        <y>0</y>
        <width>113</width>
        <height>20</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">background-color: rgb(0, 0, 0);
color: rgb(255, 255, 255);</string>
      </property>
     </widget>
     <widget class="listWrapper" name="listWidget">
      <property name="geometry">
       <rect>
        <x>380</x>
        <y>10</y>
        <width>221</width>
        <height>41</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">background-color: rgb(255, 255, 255);
border-radius:5px;</string>
      </property>
     </widget>
     <widget class="QLabel" name="label_7">
      <property name="geometry">
       <rect>
        <x>60</x>
        <y>30</y>
        <width>101</width>
        <height>20</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: rgb(0, 0, 89);
font: 75 9pt &quot;Leelawadee&quot;;
background-color: rgba(255, 255, 255, 0);
font-weight:bold</string>
      </property>
      <property name="text">
       <string>Camera Name</string>
      </property>
     </widget>
     <widget class="QLabel" name="label_8">
      <property name="geometry">
       <rect>
        <x>60</x>
        <y>0</y>
        <width>91</width>
        <height>16</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: rgb(0, 0, 89);
font: 75 9pt &quot;Leelawadee&quot;;
background-color: rgba(255, 255, 255, 0);
font-weight:bold</string>
      </property>
      <property name="text">
       <string>New Reference Pt</string>
      </property>
     </widget>
    </widget>
    <widget class="QWidget" name="Shader">
     <attribute name="title">
      <string>Shader</string>
     </attribute>
     <widget class="lineTextWrapper" name="lineEdit_3">
      <property name="geometry">
       <rect>
        <x>40</x>
        <y>10</y>
        <width>113</width>
        <height>20</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">background-color: rgb(0, 0, 0);
color: rgb(255, 255, 255);</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButton_23">
      <property name="geometry">
       <rect>
        <x>170</x>
        <y>10</y>
        <width>91</width>
        <height>23</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: white;
background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #600000, stop: 0.1 #c00000, stop: 0.49 #ff0000, stop: 0.5 #700000, stop: 1 #600000);
border-width: 1px;
border-color: #fff;
border-style: solid;
border-radius: 7;
padding: 3px;
font-size: 10px;
font-weight:bold;
padding-left: 5px;
padding-right: 5px;</string>
      </property>
      <property name="text">
       <string>Load Shader</string>
      </property>
     </widget>
    </widget>
   </widget>
   <widget class="QGroupBox" name="groupBox">
    <property name="geometry">
     <rect>
      <x>10</x>
      <y>80</y>
      <width>171</width>
      <height>181</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">color: rgb(0, 0, 89);
font: 75 10pt &quot;Leelawadee&quot;;
background-color: rgba(255, 255, 255, 0);
font-weight:bold</string>
    </property>
    <property name="title">
     <string>Translation</string>
    </property>
    <widget class="QLabel" name="label_5">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>120</y>
       <width>16</width>
       <height>16</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">color: rgb(0, 0, 89);
font: 75 10pt &quot;Leelawadee&quot;;
background-color: rgba(255, 255, 255, 0);
font-weight:bold</string>
     </property>
     <property name="text">
      <string>Z</string>
     </property>
    </widget>
    <widget class="QSlider" name="horizontalSlider">
     <property name="geometry">
      <rect>
       <x>20</x>
       <y>40</y>
       <width>141</width>
       <height>19</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QSlider{
background-color: rgba(255, 255, 255, 0);
}
QSlider::groove:horizontal {
border: 1px solid #999999;
height: 8px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #B1B1B1, stop:1 #c4c4c4);
}
QSlider::handle:horizontal {
background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #b4b4b4, stop:1 #8f8f8f);
border: 1px solid #5c5c5c;
width: 18px;
margin: -2px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
border-radius: 3px;
}</string>
     </property>
     <property name="minimum">
      <number>-30</number>
     </property>
     <property name="maximum">
      <number>30</number>
     </property>
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
    </widget>
    <widget class="QLabel" name="label_4">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>70</y>
       <width>16</width>
       <height>16</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">color: rgb(0, 0, 89);
font: 75 10pt &quot;Leelawadee&quot;;
background-color: rgba(255, 255, 255, 0);
font-weight:bold</string>
     </property>
     <property name="text">
      <string>Y</string>
     </property>
    </widget>
    <widget class="QSlider" name="horizontalSlider_2">
     <property name="geometry">
      <rect>
       <x>20</x>
       <y>90</y>
       <width>141</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QSlider{

background-color: rgba(255, 255, 255, 0);
}
QSlider::groove:horizontal {
border: 1px solid #999999;
height: 8px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #B1B1B1, stop:1 #c4c4c4);
}
QSlider::handle:horizontal {
background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #b4b4b4, stop:1 #8f8f8f);
border: 1px solid #5c5c5c;
width: 18px;
margin: -2px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
border-radius: 3px;
}</string>
     </property>
     <property name="minimum">
      <number>-30</number>
     </property>
     <property name="maximum">
      <number>30</number>
     </property>
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
    </widget>
    <widget class="QLabel" name="label_3">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>20</y>
       <width>16</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">color: rgb(0, 0, 89);
font: 75 10pt &quot;Leelawadee&quot;;
background-color: rgba(255, 255, 255, 0);
font-weight:bold</string>
     </property>
     <property name="text">
      <string>X</string>
     </property>
    </widget>
    <widget class="QSlider" name="horizontalSlider_3">
     <property name="geometry">
      <rect>
       <x>20</x>
       <y>140</y>
       <width>141</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QSlider{
background-color: rgba(255, 255, 255, 0);
}
QSlider::groove:horizontal {
border: 1px solid #999999;
height: 8px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #B1B1B1, stop:1 #c4c4c4);
}
QSlider::handle:horizontal {
background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #b4b4b4, stop:1 #8f8f8f);
border: 1px solid #5c5c5c;
width: 18px;
margin: -2px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
border-radius: 3px;
}</string>
     </property>
     <property name="minimum">
      <number>-30</number>
     </property>
     <property name="maximum">
      <number>30</number>
     </property>
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
    </widget>
   </widget>
  </widget>
  <widget class="QMenuBar" name="menuBar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1005</width>
     <height>21</height>
    </rect>
   </property>
   <widget class="QMenu" name="menuFile">
    <property name="title">
     <string>File</string>
    </property>
    <addaction name="actionLoad_Obj_2"/>
    <addaction name="actionSave_Obj"/>
    <addaction name="separator"/>
    <addaction name="actionNew_Cube"/>
    <addaction name="separator"/>
    <addaction name="actionQuit"/>
   </widget>
   <widget class="QMenu" name="menuAnimate">
    <property name="title">
     <string>Animate</string>
    </property>
    <addaction name="actionPlay"/>
    <addaction name="actionStop"/>
   </widget>
   <widget class="QMenu" name="menuLighting">
    <property name="title">
     <string>Lighting</string>
    </property>
    <addaction name="actionChange_Light_Position"/>
   </widget>
   <widget class="QMenu" name="menuEdit_Mesh">
    <property name="title">
     <string>Edit Mesh</string>
    </property>
    <widget class="QMenu" name="menuExtrude">
     <property name="title">
      <string>Extrude</string>
     </property>
     <addaction name="actionSet_Distance"/>
     <addaction name="actionExtrude"/>
    </widget>
    <addaction name="actionAdd_Vertex"/>
    <addaction name="actionRemove_Vertex"/>
    <addaction name="actionSplit_Quad"/>
    <addaction name="actionAdd_Edge"/>
    <addaction name="separator"/>
    <addaction name="actionSubdivide"/>
    <addaction name="menuExtrude"/>
   </widget>
   <widget class="QMenu" name="menuDocumentations">
    <property name="title">
     <string>Documentations</string>
    </property>
    <addaction name="actionOpen"/>
   </widget>
   <addaction name="menuFile"/>
   <addaction name="menuAnimate"/>
   <addaction name="menuLighting"/>
   <addaction name="menuEdit_Mesh"/>
   <addaction name="menuDocumentations"/>
  </widget>
  <action name="actionLoad_Obj">
   <property name="text">
    <string>Load Obj</string>
   </property>
  </action>
  <action name="actionPlay">
   <property name="text">
    <string>Play</string>
   </property>
  </action>
  <action name="actionStop">
   <property name="text">
    <string>Stop</string>
   </property>
  </action>
  <action name="actionNew_Cube">
   <property name="checkable">
    <bool>true</bool>
   </property>
   <property name="text">
    <string>New Cube</string>
   </property>
  </action>
  <action name="actionLoad_Shader">
   <property name="text">
    <string>Load Shader</string>
   </property>
  </action>
  <action name="actionChange_Light_Position">
   <property name="text">
    <string>Change Light Position</string>
   </property>
  </action>
  <action name="actionRemove_Vertex">
   <property name="text">
    <string>Remove Vertex</string>
   </property>
  </action>
  <action name="actionSplit_Quad">
   <property name="text">
    <string>Split Quad</string>
   </property>
  </action>
  <action name="actionAdd_Vertex">
   <property name="text">
    <string>Add Vertex</string>
   </property>
  </action>
  <action name="actionAdd_Edge">
   <property name="text">
    <string>Add Edge</string>
   </property>
  </action>
  <action name="actionQuit">
   <property name="text">
    <string>Quit</string>
   </property>
  </action>
  <action name="actionSubdivide">
   <property name="text">
    <string>Subdivide</string>
   </property>
  </action>
  <action name="actionLoad_Obj_2">
   <property name="text">
    <string>Load Obj</string>
   </property>
  </action>
  <action name="actionLoad_Shader_2">
   <property name="text">
    <string>Load Shader</string>
   </property>
  </action>
  <action name="actionSave_Obj">
   <property name="text">
    <string>Save Obj</string>
   </property>
  </action>
  <action name="actionSet_Distance">
   <property name="text">
    <string>Set Distance</string>
   </property>
  </action>
  <action name="actionExtrude">
   <property name="text">
    <string>Extrude</string>
   </property>
  </action>
  <action name="actionOpen">
   <property name="text">
    <string>Open</string>
   </property>
  </action>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <customwidgets>
  <customwidget>
   <class>MyGLWidget</class>
   <extends>QWidget</extends>
   <header>myglwidget.h</header>
   <container>1</container>
   <slots>
    <signal>sendFaces(FACES)</signal>
    <signal>sendVertices(VERTICES)</signal>
    <signal>sendHalfEdges(EDGES)</signal>
    <signal>setFaceRow(int)</signal>
    <signal>setVertexRow(int)</signal>
    <signal>setHERow(int)</signal>
    <signal>resetSavedViews()</signal>
    <signal>addUserCam(CAMERAS,QString)</signal>
    <signal>sendSetX(int)</signal>
    <signal>sendSetY(int)</signal>
    <signal>sendSetZ(int)</signal>
    <slot>startCubeRotation()</slot>
    <slot>stopCubeRotation()</slot>
    <slot>doUpdateGL()</slot>
    <slot>gotAddVertexToEdge(HalfEdge*,Vertex*)</slot>
    <slot>doAddEdgeBetweenTwoFacesShareAVertex(FaceHE*,FaceHE*,HalfEdge*,HalfEdge*)</slot>
    <slot>doSplitQuadIntoTwoTriangles(FaceHE*)</slot>
    <slot>doDeleteVertex(HalfEdge*)</slot>
    <slot>checkFacePlanarity()</slot>
    <slot>redrawOutlines()</slot>
    <slot>newCube()</slot>
    <slot>loadShader(QString)</slot>
    <slot>setLightPos(QString)</slot>
    <slot>subdivide()</slot>
    <slot>loadMesh()</slot>
    <slot>callLoadShader()</slot>
    <slot>saveMesh()</slot>
    <slot>changeLight()</slot>
    <slot>showBox()</slot>
    <slot>disableBox()</slot>
    <slot>getLValue(int)</slot>
    <slot>getMValue(int)</slot>
    <slot>getNValue(int)</slot>
    <slot>saveUserView(QString)</slot>
    <slot>userView(CAMERAS)</slot>
    <slot>setRefPoint(QString)</slot>
    <slot>snapView()</slot>
    <slot>resetCamera()</slot>
    <slot>frontView()</slot>
    <slot>overheadView()</slot>
    <slot>leftView()</slot>
    <slot>rightView()</slot>
    <slot>backView()</slot>
    <slot>bottomView()</slot>
    <slot>perspectiveView()</slot>
    <slot>addEdge()</slot>
    <slot>setXBox(int)</slot>
    <slot>setYBox(int)</slot>
    <slot>setZBox(int)</slot>
    <slot>callExtrude(float)</slot>
    <slot>twist()</slot>
    <slot>bend()</slot>
    <slot>taper()</slot>
    <slot>showEBox()</slot>
    <slot>callExtrude()</slot>
    <slot>showDoc()</slot>
    <slot>showLoadShader()</slot>
    <slot>twistIndex(int)</slot>
   </slots>
  </customwidget>
  <customwidget>
   <class>listWrapper</class>
   <extends>QListWidget</extends>
   <header>listwrapper.h</header>
   <slots>
    <signal>updateGLWindow()</signal>
    <signal>callAddVertexToEdge(HalfEdge*,Vertex*)</signal>
    <signal>callAddEdgeBetweenTwoFacesShareAVertex(FaceHE*,FaceHE*,HalfEdge*,HalfEdge*)</signal>
    <signal>callSplitFace(FaceHE*)</signal>
    <signal>callDeleteVertex(HalfEdge*)</signal>
    <signal>sendNum(int)</signal>
    <signal>sendEdge(HalfEdge*)</signal>
    <signal>sendCam(CAMERAS)</signal>
    <slot>addFaces(FACES)</slot>
    <slot>addVertices(VERTICES)</slot>
    <slot>setX(int)</slot>
    <slot>setY(int)</slot>
    <slot>setZ(int)</slot>
    <slot>setRed(int)</slot>
    <slot>setGreen(int)</slot>
    <slot>setBlue(int)</slot>
    <slot>addEdges(EDGES)</slot>
    <slot>addVertexIntoEdge()</slot>
    <slot>addEdgeTwoFaces()</slot>
    <slot>addSplitQuad()</slot>
    <slot>addDeleteVertex()</slot>
    <slot>addEdgeTwoFacesUsingHalfEdges()</slot>
    <slot>setTheRow(int)</slot>
    <slot>testEdge()</slot>
    <slot>gotClickedCam()</slot>
    <slot>addCam(CAMERAS,QString)</slot>
    <slot>saveUserView(QString)</slot>
   </slots>
  </customwidget>
  <customwidget>
   <class>lineTextWrapper</class>
   <extends>QLineEdit</extends>
   <header>linetextwrapper.h</header>
   <slots>
    <signal>signalShaderN(QString)</signal>
    <signal>signalLightPos(QString)</signal>
    <signal>signalSaveCam(QString)</signal>
    <signal>signalRefPoint(QString)</signal>
    <signal>signalDistance(float)</signal>
    <slot>gotClickedShaderName()</slot>
    <slot>gotClickedLightPos()</slot>
    <slot>gotClickedCam()</slot>
    <slot>gotClickedRefPoint()</slot>
    <slot>gotDistance()</slot>
   </slots>
  </customwidget>
 </customwidgets>
 <resources>
  <include location="startercode.qrc"/>
 </resources>
 <connections>
  <connection>
   <sender>pushButton_3</sender>
   <signal>clicked()</signal>
   <receiver>EdgesList</receiver>
   <slot>addVertexIntoEdge()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>492</x>
     <y>93</y>
    </hint>
    <hint type="destinationlabel">
     <x>840</x>
     <y>221</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_5</sender>
   <signal>clicked()</signal>
   <receiver>faceList</receiver>
   <slot>addSplitQuad()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>290</x>
     <y>91</y>
    </hint>
    <hint type="destinationlabel">
     <x>840</x>
     <y>112</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_6</sender>
   <signal>clicked()</signal>
   <receiver>EdgesList</receiver>
   <slot>addDeleteVertex()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>210</x>
     <y>91</y>
    </hint>
    <hint type="destinationlabel">
     <x>840</x>
     <y>250</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_4</sender>
   <signal>clicked()</signal>
   <receiver>EdgesList</receiver>
   <slot>addEdgeTwoFacesUsingHalfEdges()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>450</x>
     <y>91</y>
    </hint>
    <hint type="destinationlabel">
     <x>840</x>
     <y>221</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton</sender>
   <signal>clicked()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>startCubeRotation()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>80</x>
     <y>71</y>
    </hint>
    <hint type="destinationlabel">
     <x>541</x>
     <y>122</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_2</sender>
   <signal>clicked()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>stopCubeRotation()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>150</x>
     <y>71</y>
    </hint>
    <hint type="destinationlabel">
     <x>603</x>
     <y>122</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>mainWindowClass</sender>
   <signal>sendFaces(FACES)</signal>
   <receiver>faceList</receiver>
   <slot>addFaces(FACES)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>614</x>
     <y>122</y>
    </hint>
    <hint type="destinationlabel">
     <x>840</x>
     <y>81</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>faceList</sender>
   <signal>updateGLWindow()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>doUpdateGL()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>840</x>
     <y>81</y>
    </hint>
    <hint type="destinationlabel">
     <x>615</x>
     <y>122</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>mainWindowClass</sender>
   <signal>sendHalfEdges(EDGES)</signal>
   <receiver>EdgesList</receiver>
   <slot>addEdges(EDGES)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>636</x>
     <y>156</y>
    </hint>
    <hint type="destinationlabel">
     <x>840</x>
     <y>223</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>EdgesList</sender>
   <signal>callAddVertexToEdge(HalfEdge*,Vertex*)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>gotAddVertexToEdge(HalfEdge*,Vertex*)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>840</x>
     <y>221</y>
    </hint>
    <hint type="destinationlabel">
     <x>627</x>
     <y>192</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>faceList</sender>
   <signal>callAddEdgeBetweenTwoFacesShareAVertex(FaceHE*,FaceHE*,HalfEdge*,HalfEdge*)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>doAddEdgeBetweenTwoFacesShareAVertex(FaceHE*,FaceHE*,HalfEdge*,HalfEdge*)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>840</x>
     <y>91</y>
    </hint>
    <hint type="destinationlabel">
     <x>622</x>
     <y>124</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>faceList</sender>
   <signal>callSplitFace(FaceHE*)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>doSplitQuadIntoTwoTriangles(FaceHE*)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>840</x>
     <y>112</y>
    </hint>
    <hint type="destinationlabel">
     <x>617</x>
     <y>122</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>EdgesList</sender>
   <signal>callDeleteVertex(HalfEdge*)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>doDeleteVertex(HalfEdge*)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>840</x>
     <y>226</y>
    </hint>
    <hint type="destinationlabel">
     <x>640</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>EdgesList</sender>
   <signal>callAddEdgeBetweenTwoFacesShareAVertex(FaceHE*,FaceHE*,HalfEdge*,HalfEdge*)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>doAddEdgeBetweenTwoFacesShareAVertex(FaceHE*,FaceHE*,HalfEdge*,HalfEdge*)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>840</x>
     <y>237</y>
    </hint>
    <hint type="destinationlabel">
     <x>634</x>
     <y>177</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_2</sender>
   <signal>sliderReleased()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>checkFacePlanarity()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>170</x>
     <y>210</y>
    </hint>
    <hint type="destinationlabel">
     <x>611</x>
     <y>404</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_3</sender>
   <signal>sliderReleased()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>checkFacePlanarity()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>170</x>
     <y>260</y>
    </hint>
    <hint type="destinationlabel">
     <x>598</x>
     <y>437</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>mainWindowClass</sender>
   <signal>setFaceRow(int)</signal>
   <receiver>faceList</receiver>
   <slot>setTheRow(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>636</x>
     <y>139</y>
    </hint>
    <hint type="destinationlabel">
     <x>840</x>
     <y>129</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_2</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>redrawOutlines()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>170</x>
     <y>210</y>
    </hint>
    <hint type="destinationlabel">
     <x>636</x>
     <y>414</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_3</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>redrawOutlines()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>170</x>
     <y>260</y>
    </hint>
    <hint type="destinationlabel">
     <x>633</x>
     <y>449</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider</sender>
   <signal>sliderReleased()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>checkFacePlanarity()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>170</x>
     <y>159</y>
    </hint>
    <hint type="destinationlabel">
     <x>494</x>
     <y>355</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>redrawOutlines()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>170</x>
     <y>159</y>
    </hint>
    <hint type="destinationlabel">
     <x>615</x>
     <y>375</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>mainWindowClass</sender>
   <signal>sendVertices(VERTICES)</signal>
   <receiver>VertexList</receiver>
   <slot>addVertices(VERTICES)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>641</x>
     <y>223</y>
    </hint>
    <hint type="destinationlabel">
     <x>840</x>
     <y>441</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>mainWindowClass</sender>
   <signal>setVertexRow(int)</signal>
   <receiver>VertexList</receiver>
   <slot>setTheRow(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>633</x>
     <y>335</y>
    </hint>
    <hint type="destinationlabel">
     <x>840</x>
     <y>489</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>faceList</sender>
   <signal>sendNum(int)</signal>
   <receiver>lcdNumber</receiver>
   <slot>display(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>840</x>
     <y>100</y>
    </hint>
    <hint type="destinationlabel">
     <x>933</x>
     <y>54</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>EdgesList</sender>
   <signal>sendNum(int)</signal>
   <receiver>lcdNumber_2</receiver>
   <slot>display(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>840</x>
     <y>271</y>
    </hint>
    <hint type="destinationlabel">
     <x>930</x>
     <y>192</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>VertexList</sender>
   <signal>sendNum(int)</signal>
   <receiver>lcdNumber_3</receiver>
   <slot>display(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>840</x>
     <y>462</y>
    </hint>
    <hint type="destinationlabel">
     <x>930</x>
     <y>411</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>mainWindowClass</sender>
   <signal>setHERow(int)</signal>
   <receiver>EdgesList</receiver>
   <slot>setTheRow(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>598</x>
     <y>260</y>
    </hint>
    <hint type="destinationlabel">
     <x>840</x>
     <y>278</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>EdgesList</sender>
   <signal>sendEdge(HalfEdge*)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>printEdge(HalfEdge*)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>840</x>
     <y>312</y>
    </hint>
    <hint type="destinationlabel">
     <x>601</x>
     <y>291</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionQuit</sender>
   <signal>triggered()</signal>
   <receiver>My3DViewerClass</receiver>
   <slot>exitWindow()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>503</x>
     <y>296</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionNew_Cube</sender>
   <signal>triggered()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>newCube()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>505</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionPlay</sender>
   <signal>triggered()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>startCubeRotation()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>505</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionStop</sender>
   <signal>triggered()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>stopCubeRotation()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>505</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionAdd_Edge</sender>
   <signal>triggered()</signal>
   <receiver>EdgesList</receiver>
   <slot>addEdgeTwoFacesUsingHalfEdges()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>915</x>
     <y>306</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionAdd_Vertex</sender>
   <signal>triggered()</signal>
   <receiver>EdgesList</receiver>
   <slot>addVertexIntoEdge()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>915</x>
     <y>306</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionRemove_Vertex</sender>
   <signal>triggered()</signal>
   <receiver>EdgesList</receiver>
   <slot>addDeleteVertex()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>915</x>
     <y>306</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionSplit_Quad</sender>
   <signal>triggered()</signal>
   <receiver>faceList</receiver>
   <slot>addSplitQuad()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>915</x>
     <y>126</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionSubdivide</sender>
   <signal>triggered()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>subdivide()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>505</x>
     <y>316</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionLoad_Obj_2</sender>
   <signal>triggered()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>loadMesh()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>505</x>
     <y>321</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionLoad_Shader_2</sender>
   <signal>triggered()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>showLoad()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>505</x>
     <y>321</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionSave_Obj</sender>
   <signal>triggered()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>saveMesh()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>346</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionChange_Light_Position</sender>
   <signal>triggered()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>changeLight()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>showBox_button</sender>
   <signal>clicked()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>showBox()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>52</x>
     <y>524</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>hideBox_button</sender>
   <signal>clicked()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>disableBox()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>132</x>
     <y>524</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox</sender>
   <signal>valueChanged(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>getLValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>107</x>
     <y>383</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_2</sender>
   <signal>valueChanged(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>getMValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>109</x>
     <y>476</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_3</sender>
   <signal>valueChanged(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>getNValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>109</x>
     <y>444</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>listWidget</sender>
   <signal>itemClicked(QListWidgetItem*)</signal>
   <receiver>listWidget</receiver>
   <slot>gotClickedCam()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>725</x>
     <y>93</y>
    </hint>
    <hint type="destinationlabel">
     <x>750</x>
     <y>93</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>mainWindowClass</sender>
   <signal>resetSavedViews()</signal>
   <receiver>listWidget</receiver>
   <slot>clear()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>264</x>
     <y>139</y>
    </hint>
    <hint type="destinationlabel">
     <x>581</x>
     <y>93</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>mainWindowClass</sender>
   <signal>addUserCam(CAMERAS,QString)</signal>
   <receiver>listWidget</receiver>
   <slot>addCam(CAMERAS,QString)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>284</x>
     <y>141</y>
    </hint>
    <hint type="destinationlabel">
     <x>605</x>
     <y>93</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_7</sender>
   <signal>clicked()</signal>
   <receiver>lineEdit</receiver>
   <slot>gotClickedCam()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>535</x>
     <y>95</y>
    </hint>
    <hint type="destinationlabel">
     <x>470</x>
     <y>95</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_8</sender>
   <signal>clicked()</signal>
   <receiver>lineEdit_2</receiver>
   <slot>gotClickedRefPoint()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>529</x>
     <y>68</y>
    </hint>
    <hint type="destinationlabel">
     <x>448</x>
     <y>65</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>lineEdit</sender>
   <signal>signalSaveCam(QString)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>saveUserView(QString)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>403</x>
     <y>95</y>
    </hint>
    <hint type="destinationlabel">
     <x>508</x>
     <y>123</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>listWidget</sender>
   <signal>sendCam(CAMERAS)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>userView(CAMERAS)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>574</x>
     <y>93</y>
    </hint>
    <hint type="destinationlabel">
     <x>248</x>
     <y>119</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>lineEdit_2</sender>
   <signal>signalRefPoint(QString)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>setRefPoint(QString)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>380</x>
     <y>65</y>
    </hint>
    <hint type="destinationlabel">
     <x>480</x>
     <y>135</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_4</sender>
   <signal>clicked()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>addEdge()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>426</x>
     <y>67</y>
    </hint>
    <hint type="destinationlabel">
     <x>336</x>
     <y>117</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>setXBox(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>128</x>
     <y>156</y>
    </hint>
    <hint type="destinationlabel">
     <x>216</x>
     <y>163</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_2</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>setYBox(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>119</x>
     <y>210</y>
    </hint>
    <hint type="destinationlabel">
     <x>213</x>
     <y>215</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_3</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>setZBox(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>134</x>
     <y>257</y>
    </hint>
    <hint type="destinationlabel">
     <x>211</x>
     <y>263</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>mainWindowClass</sender>
   <signal>sendSetX(int)</signal>
   <receiver>VertexList</receiver>
   <slot>setX(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>795</x>
     <y>477</y>
    </hint>
    <hint type="destinationlabel">
     <x>873</x>
     <y>470</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>mainWindowClass</sender>
   <signal>sendSetY(int)</signal>
   <receiver>VertexList</receiver>
   <slot>setY(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>770</x>
     <y>479</y>
    </hint>
    <hint type="destinationlabel">
     <x>867</x>
     <y>483</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>mainWindowClass</sender>
   <signal>sendSetZ(int)</signal>
   <receiver>VertexList</receiver>
   <slot>setZ(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>772</x>
     <y>492</y>
    </hint>
    <hint type="destinationlabel">
     <x>866</x>
     <y>497</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox</sender>
   <signal>valueChanged(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>setXBox(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>107</x>
     <y>383</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_2</sender>
   <signal>valueChanged(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>setYBox(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>109</x>
     <y>476</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_3</sender>
   <signal>valueChanged(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>setZBox(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>109</x>
     <y>444</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_20</sender>
   <signal>clicked()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>twist()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>89</x>
     <y>414</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_21</sender>
   <signal>clicked()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>taper()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>89</x>
     <y>454</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>341</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionSet_Distance</sender>
   <signal>triggered()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>showEBox()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>346</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionExtrude</sender>
   <signal>triggered()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>callExtrude()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>346</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_10</sender>
   <signal>clicked()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>callExtrude()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>744</x>
     <y>68</y>
    </hint>
    <hint type="destinationlabel">
     <x>568</x>
     <y>203</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_9</sender>
   <signal>clicked()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>subdivide()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>646</x>
     <y>85</y>
    </hint>
    <hint type="destinationlabel">
     <x>481</x>
     <y>137</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionOpen</sender>
   <signal>triggered()</signal>
   <receiver>mainWindowClass</receiver>
   <slot>showDoc()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>346</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_23</sender>
   <signal>clicked()</signal>
   <receiver>lineEdit_3</receiver>
   <slot>gotClickedShaderName()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>373</x>
     <y>65</y>
    </hint>
    <hint type="destinationlabel">
     <x>322</x>
     <y>65</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>lineEdit_3</sender>
   <signal>signalShaderN(QString)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>loadShader(QString)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>301</x>
     <y>66</y>
    </hint>
    <hint type="destinationlabel">
     <x>307</x>
     <y>178</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_4</sender>
   <signal>valueChanged(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>twistIndex(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>110</x>
     <y>366</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>346</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider</sender>
   <signal>valueChanged(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>checkFacePlanarity()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>100</x>
     <y>150</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>346</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_2</sender>
   <signal>valueChanged(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>checkFacePlanarity()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>100</x>
     <y>200</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>346</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_3</sender>
   <signal>valueChanged(int)</signal>
   <receiver>mainWindowClass</receiver>
   <slot>checkFacePlanarity()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>100</x>
     <y>250</y>
    </hint>
    <hint type="destinationlabel">
     <x>500</x>
     <y>346</y>
    </hint>
   </hints>
  </connection>
 </connections>
 <slots>
  <slot>exitWindow()</slot>
 </slots>
</ui>
